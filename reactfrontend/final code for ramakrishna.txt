1.index.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">          
        <h2>Login</h2>
        <input type="text" id="username" placeholder="Username">
        <input type="password" id="password" placeholder="Password">
        <button onclick="login()">Login</button>
        <p>New user? <a href="register.html">Register here</a></p>
    </div>   
    <script src="script.js"></script>
</body>
</html>

2.salary.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enter Salary</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h2>Enter Your Salary</h2>
        <input type="number" id="salary" placeholder="Enter salary amount">
        <button onclick="saveSalary()">Next</button>
    </div>
    <script src="script.js"></script>
</body>
</html>


3.budget.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Budget Allocation</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body onload="loadBudgetPage()">
    <div class="container">
        <h2>Budget Allocation</h2>
        <p>Salary: ₹<span id="displaySalary">0</span></p>

        <h3>Allocated Expenses</h3>
        <ul id="expenseList"></ul>

        <input type="text" id="newExpenseName" placeholder="Expense Name">
        <input type="number" id="newExpenseAmount" placeholder="Amount">
        <button onclick="addExpense()">Add Expense</button>

        <p><strong>Remaining Balance: ₹<span id="remainingBalance">0</span></strong></p>
        <button onclick="goToChart()">Next</button>
        <button onclick="logout()">Logout</button> <!-- Added Logout Button -->
    </div>
    
    <script src="script.js"></script>
</body>
</html>

4.chart.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Budget Visualization</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body onload="loadChartPage()">
    <div class="container">
        <h2>Budget Analysis</h2>
        <canvas id="expenseChart"></canvas>
        <button onclick="goBack()">Go Back</button>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="script.js"></script>
</body>
</html>

5.register.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h2>Register</h2>
        <input type="text" id="newUsername" placeholder="Username">
        <input type="password" id="newPassword" placeholder="Password">
        <button onclick="register()">Register</button>
        <p>Already have an account? <a href="index.html">Login here</a></p>
    </div>
    <script src="script.js"></script>
</body>
</html>

6.styles.css

body {
    background-image: url("img/pexels-kindelmedia-7054391.jpg");
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    height: 100vh; /* Full screen height */
    display: flex;
    justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
  }
  
  .login-container {
    background-color: rgba(255, 255, 255, 0.8); /* Light background to make text visible */
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    width: 300px;
    text-align: center;
  }
  
  
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 1.5);  /* Semi-transparent dark layer */
  }
  
.container {
    max-width: 500px;
    margin: auto;
    position: center;
    background: rgba(248, 243, 243, 0.978);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
}
l
input {
    display: block;
    width: 80%;
    padding: 10px;
    margin: 10px auto;
    border: 1px solid #ccc;
    border-radius: 5px;
}

button {
    padding: 10px 15px;
    background-color: #28a745;
    color: white;
    border: none;
    cursor: pointer;
    margin-top: 10px;
}

ul {
    list-style: none;
    padding: 0;
}

li {
    margin: 5px 0;
}

.chart-container {
    width: 100%;
    height: 300px;
}


7.script.js
// User Registration
function register() {
    let username = document.getElementById("newUsername").value;
    let password = document.getElementById("newPassword").value;
    
    if (username && password) {
        localStorage.setItem(username, password);
        alert("Registration successful! You can now log in.");
        window.location.href = "index.html";
    } else {
        alert("Please fill in all fields.");
    }
}

// User Login
function login() {
    let username = document.getElementById("username").value;
    let password = document.getElementById("password").value;

    if (localStorage.getItem(username) === password) {
        localStorage.setItem("loggedInUser", username);
        window.location.href = "salary.html";
    } else {
        alert("Invalid username or password!");
    }
}
// Save Salary
function saveSalary() {
    let salary = parseFloat(document.getElementById("salary").value) || 0;
    localStorage.setItem("salary", salary);
    localStorage.setItem("totalExpenses", 0); // Reset expenses
    localStorage.setItem("addedExpenses", JSON.stringify([])); // Reset added expenses
    window.location.href = "budget.html";
}

// Load Budget Page
function loadBudgetPage() {
    let salary = parseFloat(localStorage.getItem("salary")) || 0;
    let totalExpenses = parseFloat(localStorage.getItem("totalExpenses")) || 0;
    
    document.getElementById("displaySalary").innerText = `₹${salary}`;

    let expenseList = document.getElementById("expenseList");
    expenseList.innerHTML = "";

    // Predefined Expenses
    let defaultExpenses = [
        { name: "Rent/Loan", percent: 30 },
        { name: "Groceries", percent: 15 },
        { name: "Savings", percent: 20 },
        { name: "Entertainment", percent: 10 }
    ];

    let allocatedAmount = 0;
    defaultExpenses.forEach(exp => {
        let amount = (salary * exp.percent) / 100;
        allocatedAmount += amount;
        let listItem = document.createElement("li");
        listItem.innerText = `${exp.name}: ₹${amount.toFixed(2)}`;
        listItem.setAttribute("data-name", exp.name);
        listItem.setAttribute("data-amount", amount);
        expenseList.appendChild(listItem);
    });

    // Retrieve & Display Added Expenses
    let addedExpenses = JSON.parse(localStorage.getItem("addedExpenses")) || [];
    addedExpenses.forEach(exp => {
        let listItem = document.createElement("li");
        listItem.innerText = `${exp.name}: ₹${exp.amount}`;
        listItem.setAttribute("data-name", exp.name);
        listItem.setAttribute("data-amount", exp.amount);
        expenseList.appendChild(listItem);
        allocatedAmount += parseFloat(exp.amount);
    });

    // Update Remaining Balance
    let remainingBalance = salary - allocatedAmount;
    document.getElementById("remainingBalance").innerText = `₹${remainingBalance.toFixed(2)}`;
}

// Add Expense
function addExpense() {
    let name = document.getElementById("newExpenseName").value;
    let amount = parseFloat(document.getElementById("newExpenseAmount").value) || 0;
    
    if (name && amount > 0) {
        let expenseList = document.getElementById("expenseList");
        let listItem = document.createElement("li");
        listItem.innerText = `${name}: ₹${amount}`;
        listItem.setAttribute("data-name", name);
        listItem.setAttribute("data-amount", amount);
        expenseList.appendChild(listItem);

        // Save added expenses
        let addedExpenses = JSON.parse(localStorage.getItem("addedExpenses")) || [];
        addedExpenses.push({ name, amount });
        localStorage.setItem("addedExpenses", JSON.stringify(addedExpenses));

        // Update total expenses
        let totalExpenses = parseFloat(localStorage.getItem("totalExpenses")) || 0;
        totalExpenses += amount;
        localStorage.setItem("totalExpenses", totalExpenses);

        // Update Remaining Balance
        let salary = parseFloat(localStorage.getItem("salary")) || 0;
        let remainingBalance = salary - (parseFloat(totalExpenses) + getPredefinedExpenseTotal());
        document.getElementById("remainingBalance").innerText = `₹${remainingBalance.toFixed(2)}`;

        // Clear input fields
        document.getElementById("newExpenseName").value = "";
        document.getElementById("newExpenseAmount").value = "";
    } else {
        alert("Please enter a valid expense name and amount.");
    }
}

// Get Total Predefined Expenses
function getPredefinedExpenseTotal() {
    let salary = parseFloat(localStorage.getItem("salary")) || 0;
    let defaultExpenses = [
        { name: "Rent/Loan", percent: 30 },
        { name: "Groceries", percent: 15 },
        { name: "Savings", percent: 20 },
        { name: "Entertainment", percent: 10 }
    ];
    return defaultExpenses.reduce((total, exp) => total + (salary * exp.percent) / 100, 0);
}

// Go to Chart
function goToChart() {
    let expenses = [];
    document.querySelectorAll("#expenseList li").forEach(item => {
        expenses.push({
            name: item.getAttribute("data-name"),
            amount: parseFloat(item.getAttribute("data-amount"))
        });
    });

    localStorage.setItem("expenseData", JSON.stringify(expenses));
    window.location.href = "chart.html";
}

// Load Chart Page
function loadChartPage() {
    let ctx = document.getElementById("expenseChart").getContext("2d");
    let expenses = JSON.parse(localStorage.getItem("expenseData")) || [];
    let salary = parseFloat(localStorage.getItem("salary")) || 0;
    let totalExpenses = parseFloat(localStorage.getItem("totalExpenses")) || 0;
    let savings = salary - totalExpenses;

    let labels = expenses.map(exp => exp.name);
    let values = expenses.map(exp => exp.amount);
    
    labels.push("Savings");
    values.push(savings > 0 ? savings.toFixed(2) : 0);

    if (window.myChart) {
        window.myChart.destroy();
    }

    window.myChart = new Chart(ctx, {
        type: "pie",
        data: {
            labels: labels,
            datasets: [{
                data: values,
                backgroundColor: ["#F44336", "#4CAF50", "#FFC107", "#2196F3", "#9C27B0"]
            }]
        },
        options: { responsive: true }
    });
}

// Go Back
function goBack() {
    window.location.href = "budget.html";
}
function logout() {
    localStorage.removeItem("loggedInUser"); // Remove login session
    window.location.href = "index.html"; // Redirect to login page
}


